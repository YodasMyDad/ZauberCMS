@using ZauberCMS.Components.Editors.Models
@using ZauberCMS.Components.Editors.Settings
@implements ZauberCMS.Core.Content.Interfaces.IContentProperty
@inherits ListPropertyBaseComponent

@if (SettingsModel.MaxAmount > 0)
{
    <div>
        <RadzenText TextStyle="TextStyle.Caption">Max allowed: @SettingsModel.MaxAmount</RadzenText>
    </div>
}
<RadzenDropDown @ref="DropDown"
                Data="@SettingsModel.Items"
                @bind-Value="@SelectedValues"
                Change="@(args => OnChange(true))"
                TextProperty="Name"
                ValueProperty="Value"
                Multiple="true" AllowClear="true" Placeholder="Select items" Chips="true" Style="width: 100%;"
                @attributes="GetAdditionalAttributes()" />

@code {
    //MaxSelectedLabels="" 
    public string Name { get; set; } = "Dropdown List";
    public string Alias { get; set; } = "ZauberCMS.DropdownList";
    public string Icon { get; set; } = "arrow_drop_down";
    public string Description { get; set; } = "Dropdown list using manual or custom data, for multiple select items";
    public Type? SettingsComponent { get; set; } = typeof(ListPropertySettings);
    public List<string> Scripts { get; set; } = [];
    public List<string> Styles { get; set; } = [];
    
    private RadzenDropDown<IEnumerable<string>>? DropDown { get; set; }
    
    private IEnumerable<KeyValuePair<string, object?>> GetAdditionalAttributes()
    {
        var attributes = new List<KeyValuePair<string, object?>>();

        if (SettingsModel.MaxAmount > 0)
        {
            attributes.Add(new KeyValuePair<string, object?>("MaxSelectedLabels", SettingsModel.MaxAmount));
        }

        return attributes;
    }

}