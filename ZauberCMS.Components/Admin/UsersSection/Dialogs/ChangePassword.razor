@using Microsoft.AspNetCore.Identity
@using ZauberCMS.Core.Membership.Models
<RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" Gap="0.5rem">
    <RadzenTextBox Style="width: 100%;" Name="Password" Placeholder="New Password" Value="@Password" ValueChanged="@((string p) => { Password = p; })" aria-label="New Password"/>
</RadzenStack>
<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Right" AlignItems="AlignItems.Center" class="rz-mt-3">
    <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Success" Icon="save" Text="Save" Click="UpdatePassword"/>
</RadzenStack>

@code {
    [Inject] UserManager<User> UserManager { get; set; } = null!;
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = null!;
    [Parameter, EditorRequired] public Guid UserId { get; set; }
    private string? Password { get; set; }

    private async Task UpdatePassword()
    {
        if (!Password.IsNullOrWhiteSpace())
        {
            var user = await UserManager.FindByIdAsync(UserId.ToString());
            if (user != null)
            {
                var token = await UserManager.GeneratePasswordResetTokenAsync(user);
                var result = await UserManager.ResetPasswordAsync(user, token, Password);
                await BlazoredModal.CloseAsync(ModalResult.Ok(result));
            }
        }
    }
}