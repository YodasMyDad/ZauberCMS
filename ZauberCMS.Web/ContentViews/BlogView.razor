@using ZauberCMS.Core.Content.Commands
@using ZauberCMS.Core.Media.Models
@using ZauberCMS.Core.Shared.Models
@using ZauberCMS.Web.Layouts
@using ZauberCMS.Web.Shared
@implements ZauberCMS.Core.Content.Interfaces.IContentView
@layout MainLayout

<PageTitle>@(Content!.GetValue<string>("PageTitle"))</PageTitle>

<SectionContent SectionId="MainLayout.Sections.PageHeadContent">
    <meta name="description" content="@(Content!.GetValue<string>("MetaDescription"))">
</SectionContent>

<header class="masthead" style="background-image: url('@(HeaderImage.Url)')">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="site-heading">
                    <h1>@(Content!.GetValue<string>("Heading"))</h1>
                    <span class="subheading">@(Content!.GetValue<string>("SubHeading"))</span>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="container px-4 px-lg-5">

    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">
            
            @foreach (var post in BlogPages.Items)
            {
                <BlogPostPreview Content="@post"/>
                <hr class="my-4"/>
            }
        </div>
    </div>
    
    <BootstrapPagination
        PageCount="@BlogPages.TotalPages"
        CurrentPage="@CurrentPage"
        ShowFirstLast="@(true)" />

</div>

@code {
    [Parameter] public Content? Content { get; set; }
    [Parameter] public Dictionary<string, string>? LanguageKeys { get; set; }

    private PaginatedList<Content> BlogPages { get; set; } = new();
    private Media HeaderImage { get; set; } = new();
    private int CurrentPage { get; set; } = 1;
    
    protected override async Task OnParametersSetAsync()
    {
        var amountPerPage = Content!.GetValue<int>("AmountPerPage");
        var queryContentCommand = new QueryContentCommand
        {
            OrderBy = GetContentsOrderBy.DateCreated,
            AmountPerPage = amountPerPage,
            WhereClause = content => content.ParentId == Content!.Id
        };
        if (NavigationManager.TryGetQueryString<int>("p", out var page))
        {
                queryContentCommand.PageIndex = page;
                CurrentPage = page;
        }
        BlogPages = await Mediator.Send(queryContentCommand);
        HeaderImage = (await Content!.GetMedias("HeaderImage", Mediator, "/assets/img/about-bg.jpg")).FirstOrDefault()!;
    }
}